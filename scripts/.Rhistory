(1|L2_CO_ENTIDADE:L2_IN_MUNICIPIO_MET )+
(1|L2_CO_ENTIDADE:L2_IN_MUNICIPIO_OUT) +
(1|L2_CO_ENTIDADE:L2_IN_LABORATORIO_CIENCIAS )+
(1|L2_CO_ENTIDADE:L2_IN_QUADRA_ESPORTES_DESCOBERTA) +
(1|L2_CO_ENTIDADE:L2_IN_BANHEIRO_FORA_PREDIO )+
(1|L2_CO_ENTIDADE:L2_IN_AUDITORIO )+
(1|L2_CO_ENTIDADE:L2_IN_ALOJAM_ALUNO) +
(1|L2_CO_ENTIDADE:L2_NU_COMP_ALUNO )+
(1|L2_CO_ENTIDADE:L2_NU_FUNCIONARIOS )+
(1|L2_CO_ENTIDADE:L2_IN_EJA) +
(1|L2_CO_ENTIDADE:L2_IN_COMUM_FUND_AF )+
(1|L2_CO_ENTIDADE:L2_NU_INSE_VALOR )+
(1|L2_CO_ENTIDADE:L2_IN_COMUNIDADE_1KM) +
(1|L2_CO_ENTIDADE:L2_IN_COMUNIDADE_5KM )+
(1|L2_CO_ENTIDADE:L2_IN_TIROTEIO_1KM )+
(1|L2_CO_ENTIDADE:L2_IN_TIROTEIO_5KM),
data=df_train, family=binomial(link="logit"))
summary(nullmod1)
library(merTools)
library(lme4)
library(rms)
library(nlme)
library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_strat.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_strat.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
library(merTools)
library(lme4)
library(rms)
library(nlme)
library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_strat.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_strat.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
nullmod1 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE),  data=df_train, family=binomial(link="logit"))
summary(nullmod1)
# ========== Importação dos pacotes, treino e teste ====
library(merTools)
library(lme4)
library(rms)
library(nlme)
library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_strat.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_strat.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
# ==> Análise das variáveis de aluno: PYTHON
# ============== nullmod1: Modelo nulo (somente grupo) =================
nullmod1 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE),  data=df_train, family=binomial(link="logit"))
summary(nullmod1)
# Probabilidades estimadas
df_pred_train$pred_null <- predict(nullmod1, newdata=df_train, type="response")
df_pred_train$logodd_null <- predict(nullmod1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/df_pred_train_str_lmer.csv')
df_pred_test$pred_null <- predict(nullmod1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null <- predict(nullmod1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/df_pred_test_str_lmer.csv')
# Coeficientes
write.csv(summary(nullmod1)$coefficients, file = '../data/output/mod_nulo_fcoeff.csv')
write.csv(VarCorr(nullmod1), file = '../data/output/mod_nulo_rcoeff.csv')
# Calculando partição da variância: https://github.com/jknowles/merTools/blob/master/R/helpers.R
between <- as.numeric(as.data.frame(VarCorr(nullmod1))$vcov)
within <- (pi^2)/3
ICC <- between / (within + between)
ICC
# Efeito escola: interceptos por grupo
nullmod1_ee <- ranef(nullmod1)
write.csv(nullmod1_ee, file = '../data/output/mod_nulo_efeito_escola.csv')
source('~/Projects/tcc_emap/scripts/lme_str.R', echo=TRUE)
# ==== Importação dos pacotes, treino e teste ====
library(merTools)
library(lme4)
library(rms)
library(nlme)
# library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_bal.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_bal.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
# ==> Análise das variáveis de aluno: PYTHON
# ======= (nullmod1): Modelo nulo (grupo) =================
nullmod1 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE),  data=df_train, family=binomial(link="logit"))
summary(nullmod1)
# Probabilidades estimadas
df_pred_train$pred_null <- predict(nullmod1, newdata=df_train, type="response")
df_pred_train$logodd_null <- predict(nullmod1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null <- predict(nullmod1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null <- predict(nullmod1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod1)$coefficients, file = '../data/output/balanced/mod_nulo_fcoeff.csv')
write.csv(VarCorr(nullmod1), file = '../data/output/balanced/mod_nulo_rcoeff.csv')
# Calculando partição da variância: https://github.com/jknowles/merTools/blob/master/R/helpers.R
between <- as.numeric(as.data.frame(VarCorr(nullmod1))$vcov)
within <- (pi^2)/3
ICC <- between / (within + between)
ICC
# Efeito escola: interceptos por grupo
nullmod1_ee <- ranef(nullmod1)
write.csv(nullmod1_ee, file = '../data/output/balanced/mod_nulo_efeito_escola.csv')
# ======= (nullmod_var): Variáveis de escola =====
nullmod3 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE) +
L2_IN_MUNICIPIO_RIO +
L2_IN_MUNICIPIO_MET +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM ,
data=df_train, family=binomial(link="logit"))
summary(nullmod3)
# Probabilidades estimadas
df_pred_train$pred_null_var <- predict(nullmod3, newdata=df_train, type="response")
df_pred_train$logodd_null_var <- predict(nullmod3, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null_var <- predict(nullmod3, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null_var <- predict(nullmod3, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod3)$coefficients, file = '../data/output/balanced/mod_nulo_var_fcoeff.csv')
write.csv(VarCorr(nullmod3), file = '../data/output/balanced/mod_nulo_var_rcoeff.csv')
# ======= (modbase): Baseline (idade) ===============
formula = L1_IN_EVASAO ~ L1_NU_IDADE_REFERENCIA_NORM
# Modelo sem mixed effect:
modbase <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modbase, correlation=TRUE)
# confint(modbase)
# Coeficientes
write.csv(summary(modbase)$coefficients, file = '../data/output/balanced/mod_base_fcoeff.csv')
# Probabilidades estimadas
df_pred_train$pred_base <- predict(modbase, newdata=df_train, type="response")
df_pred_train$logood_base <- predict(modbase, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# ==> Rodando no teste:
df_pred_test$pred_base <- predict(modbase, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logood_base <- predict(modbase, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl1): Logística padrão (aluno) ===============
# ==> Modelo l2: VARIÁVEIS DE ALUNO
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_IN_MUNICIPIO_NASC_MET +
L1_IN_DIF_MUN_ESCOLA_NASC +
L1_NU_IDADE_REFERENCIA_NORM
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl1 <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modl1, correlation = TRUE)
# confint(modl1)
# Probabilidades estimadas
df_pred_train$pred_l1 <- predict(modl1, newdata=df_train, type="response")
df_pred_train$logodd_l1 <- predict(modl1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_fcoeff.csv')
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l1 <- predict(modl1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l1 <- predict(modl1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl2): Intercepto aleatório ===============
# VARIÁVEIS DE ALUNO + AGRUPAMENTO ESCOLA + COMUNIDADE
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_NU_IDADE_REFERENCIA_NORM +
L2_IN_MUNICIPIO_RIO +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM +
(1 | L2_CO_ENTIDADE)
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl2 <- glmer(formula, data=df_train, family=binomial(link="logit"),
control=glmerControl(optimizer="bobyqa"))
summary(modl2)
# confint(modl2)
# Probabilidades estimadas
df_pred_train$pred_l2 <- predict(modl2, newdata=df_train, type="response")
df_pred_train$logodd_l2 <- predict(modl2, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl2)$coefficients, file = '../data/output/balanced/mod_l2_fcoeff.csv')
write.csv(VarCorr(modl2), file = '../data/output/balanced/mod_l2_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l2 <- predict(modl2, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l2 <- predict(modl2, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Efeito escola
modl2_ee <- ranef(modl2)
write.csv(modl2_ee, file = '../data/output/balanced/modl2_efeito_escola.csv')
# ==== Importação dos pacotes, treino e teste ====
library(merTools)
library(lme4)
library(rms)
library(nlme)
# library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_bal.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_bal.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
# ==> Análise das variáveis de aluno: PYTHON
# ======= (nullmod1): Modelo nulo (grupo) =================
nullmod1 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE),  data=df_train, family=binomial(link="logit"))
summary(nullmod1)
# Probabilidades estimadas
df_pred_train$pred_null <- predict(nullmod1, newdata=df_train, type="response")
df_pred_train$logodd_null <- predict(nullmod1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null <- predict(nullmod1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null <- predict(nullmod1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod1)$coefficients, file = '../data/output/balanced/mod_nulo_fcoeff.csv')
write.csv(VarCorr(nullmod1), file = '../data/output/balanced/mod_nulo_rcoeff.csv')
# Calculando partição da variância: https://github.com/jknowles/merTools/blob/master/R/helpers.R
between <- as.numeric(as.data.frame(VarCorr(nullmod1))$vcov)
within <- (pi^2)/3
ICC <- between / (within + between)
ICC
# Efeito escola: interceptos por grupo
nullmod1_ee <- ranef(nullmod1)
write.csv(nullmod1_ee, file = '../data/output/balanced/mod_nulo_efeito_escola.csv')
# ======= (nullmod_var): Variáveis de escola =====
nullmod3 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE) +
L2_IN_MUNICIPIO_RIO +
L2_IN_MUNICIPIO_MET +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM ,
data=df_train, family=binomial(link="logit"))
summary(nullmod3)
# Probabilidades estimadas
df_pred_train$pred_null_var <- predict(nullmod3, newdata=df_train, type="response")
df_pred_train$logodd_null_var <- predict(nullmod3, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null_var <- predict(nullmod3, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null_var <- predict(nullmod3, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod3)$coefficients, file = '../data/output/balanced/mod_nulo_var_fcoeff.csv')
write.csv(VarCorr(nullmod3), file = '../data/output/balanced/mod_nulo_var_rcoeff.csv')
# ======= (modbase): Baseline (idade) ===============
formula = L1_IN_EVASAO ~ L1_NU_IDADE_REFERENCIA_NORM
# Modelo sem mixed effect:
modbase <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modbase, correlation=TRUE)
# confint(modbase)
# Coeficientes
write.csv(summary(modbase)$coefficients, file = '../data/output/balanced/mod_base_fcoeff.csv')
# Probabilidades estimadas
df_pred_train$pred_base <- predict(modbase, newdata=df_train, type="response")
df_pred_train$logood_base <- predict(modbase, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# ==> Rodando no teste:
df_pred_test$pred_base <- predict(modbase, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logood_base <- predict(modbase, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl1): Logística padrão (aluno) ===============
# ==> Modelo l2: VARIÁVEIS DE ALUNO
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_IN_MUNICIPIO_NASC_MET +
L1_IN_DIF_MUN_ESCOLA_NASC +
L1_NU_IDADE_REFERENCIA_NORM
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl1 <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modl1, correlation = TRUE)
# confint(modl1)
# Probabilidades estimadas
df_pred_train$pred_l1 <- predict(modl1, newdata=df_train, type="response")
df_pred_train$logodd_l1 <- predict(modl1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_fcoeff.csv')
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l1 <- predict(modl1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l1 <- predict(modl1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl2): Intercepto aleatório ===============
# VARIÁVEIS DE ALUNO + AGRUPAMENTO ESCOLA + COMUNIDADE
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_NU_IDADE_REFERENCIA_NORM +
L2_IN_MUNICIPIO_RIO +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM +
(1 | L2_CO_ENTIDADE)
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl2 <- glmer(formula, data=df_train, family=binomial(link="logit"),
control=glmerControl(optimizer="bobyqa"))
summary(modl2)
# confint(modl2)
# Probabilidades estimadas
df_pred_train$pred_l2 <- predict(modl2, newdata=df_train, type="response")
df_pred_train$logodd_l2 <- predict(modl2, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl2)$coefficients, file = '../data/output/balanced/mod_l2_fcoeff.csv')
write.csv(VarCorr(modl2), file = '../data/output/balanced/mod_l2_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l2 <- predict(modl2, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l2 <- predict(modl2, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Efeito escola
modl2_ee <- ranef(modl2)
write.csv(modl2_ee, file = '../data/output/balanced/modl2_efeito_escola.csv')
# ==== Importação dos pacotes, treino e teste ====
library(merTools)
library(lme4)
library(rms)
library(nlme)
# library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_bal.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test_bal.csv')
colnames(df_test)
# ==== Importação dos pacotes, treino e teste ====
library(merTools)
library(lme4)
library(rms)
library(nlme)
# library(bayr)
df_train <- read.csv('../data/treated/modelo/df_train_bal.csv')
colnames(df_train)
df_test <- read.csv('../data/treated/modelo/df_test.csv')
colnames(df_test)
# Criando tabela das probabilidades geradas no treino
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
# Criando tabela das probabilidades geradas no teste
df_pred_train <- data.frame(list('L1_ID'=df_train$L1_ID))
df_pred_train$true <- df_train$L1_IN_EVASAO
# ==> Análise das variáveis de aluno: PYTHON
# ======= (nullmod1): Modelo nulo (grupo) =================
nullmod1 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE),  data=df_train, family=binomial(link="logit"))
summary(nullmod1)
# Probabilidades estimadas
df_pred_train$pred_null <- predict(nullmod1, newdata=df_train, type="response")
df_pred_train$logodd_null <- predict(nullmod1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null <- predict(nullmod1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null <- predict(nullmod1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod1)$coefficients, file = '../data/output/balanced/mod_nulo_fcoeff.csv')
write.csv(VarCorr(nullmod1), file = '../data/output/balanced/mod_nulo_rcoeff.csv')
# Calculando partição da variância: https://github.com/jknowles/merTools/blob/master/R/helpers.R
between <- as.numeric(as.data.frame(VarCorr(nullmod1))$vcov)
within <- (pi^2)/3
ICC <- between / (within + between)
ICC
# Efeito escola: interceptos por grupo
nullmod1_ee <- ranef(nullmod1)
write.csv(nullmod1_ee, file = '../data/output/balanced/mod_nulo_efeito_escola.csv')
# ======= (nullmod_var): Variáveis de escola =====
nullmod3 <- glmer(L1_IN_EVASAO~1+(1|L2_CO_ENTIDADE) +
L2_IN_MUNICIPIO_RIO +
L2_IN_MUNICIPIO_MET +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM ,
data=df_train, family=binomial(link="logit"))
summary(nullmod3)
# Probabilidades estimadas
df_pred_train$pred_null_var <- predict(nullmod3, newdata=df_train, type="response")
df_pred_train$logodd_null_var <- predict(nullmod3, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
df_pred_test$pred_null_var <- predict(nullmod3, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null_var <- predict(nullmod3, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Coeficientes
write.csv(summary(nullmod3)$coefficients, file = '../data/output/balanced/mod_nulo_var_fcoeff.csv')
write.csv(VarCorr(nullmod3), file = '../data/output/balanced/mod_nulo_var_rcoeff.csv')
# ======= (modbase): Baseline (idade) ===============
formula = L1_IN_EVASAO ~ L1_NU_IDADE_REFERENCIA_NORM
# Modelo sem mixed effect:
modbase <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modbase, correlation=TRUE)
# confint(modbase)
# Coeficientes
write.csv(summary(modbase)$coefficients, file = '../data/output/balanced/mod_base_fcoeff.csv')
# Probabilidades estimadas
df_pred_train$pred_base <- predict(modbase, newdata=df_train, type="response")
df_pred_train$logood_base <- predict(modbase, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# ==> Rodando no teste:
df_pred_test$pred_base <- predict(modbase, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logood_base <- predict(modbase, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl1): Logística padrão (aluno) ===============
# ==> Modelo l2: VARIÁVEIS DE ALUNO
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_IN_MUNICIPIO_NASC_MET +
L1_IN_DIF_MUN_ESCOLA_NASC +
L1_NU_IDADE_REFERENCIA_NORM
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl1 <- glm(formula, data=df_train, family=binomial(link="logit"))
summary(modl1, correlation = TRUE)
# confint(modl1)
# Probabilidades estimadas
df_pred_train$pred_l1 <- predict(modl1, newdata=df_train, type="response")
df_pred_train$logodd_l1 <- predict(modl1, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_fcoeff.csv')
write.csv(summary(modl1)$coefficients, file = '../data/output/balanced/mod_l1_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l1 <- predict(modl1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l1 <- predict(modl1, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# ======= (modl2): Intercepto aleatório ===============
# VARIÁVEIS DE ALUNO + AGRUPAMENTO ESCOLA + COMUNIDADE
formula = L1_IN_EVASAO ~ L1_IN_SEXO +
L1_IN_TRANSPORTE_PUBLICO +
L1_IN_MUNICIPIO_NASC_RIO +
L1_NU_IDADE_REFERENCIA_NORM +
L2_IN_MUNICIPIO_RIO +
L2_IN_LABORATORIO_CIENCIAS +
L2_NU_FUNCIONARIOS +
L2_NU_COMP_ALUNO +
L2_NU_INSE_VALOR +
L2_IN_COMUNIDADE_5KM +
(1 | L2_CO_ENTIDADE)
# L1_IN_DISTORCAO
# Modelo com random intercept:
modl2 <- glmer(formula, data=df_train, family=binomial(link="logit"),
control=glmerControl(optimizer="bobyqa"))
summary(modl2)
# confint(modl2)
# Probabilidades estimadas
df_pred_train$pred_l2 <- predict(modl2, newdata=df_train, type="response")
df_pred_train$logodd_l2 <- predict(modl2, newdata=df_train, type="link")
write.csv(df_pred_train, file = '../data/output/balanced/df_pred_train_bal_lmer.csv')
# Coeficientes
write.csv(summary(modl2)$coefficients, file = '../data/output/balanced/mod_l2_fcoeff.csv')
write.csv(VarCorr(modl2), file = '../data/output/balanced/mod_l2_rcoeff.csv')
# Rodando no teste:
df_pred_test$pred_l2 <- predict(modl2, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l2 <- predict(modl2, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
# Efeito escola
modl2_ee <- ranef(modl2)
write.csv(modl2_ee, file = '../data/output/balanced/modl2_efeito_escola.csv')
View(df_pred_test)
View(df_test)
View(df_test)
df_test <- read.csv('../data/treated/modelo/df_test_strat.csv')
df_pred_test <- data.frame(list('L1_ID'=df_test$L1_ID))
df_pred_test$true <- df_test$L1_IN_EVASAO
df_pred_test$pred_null <- predict(nullmod1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null <- predict(nullmod1, newdata=df_test, type="link", allow.new.levels = TRUE)
df_pred_test$pred_null_var <- predict(nullmod3, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_null_var <- predict(nullmod3, newdata=df_test, type="link", allow.new.levels = TRUE)
df_pred_test$pred_base <- predict(modbase, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logood_base <- predict(modbase, newdata=df_test, type="link", allow.new.levels = TRUE)
df_pred_test$pred_l1 <- predict(modl1, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l1 <- predict(modl1, newdata=df_test, type="link", allow.new.levels = TRUE)
df_pred_test$pred_l2 <- predict(modl2, newdata=df_test, type="response", allow.new.levels = TRUE)
df_pred_test$logodd_l2 <- predict(modl2, newdata=df_test, type="link", allow.new.levels = TRUE)
write.csv(df_pred_test, file = '../data/output/balanced/df_pred_test_bal_lmer.csv')
